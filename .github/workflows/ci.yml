name: CI pipeline

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full


jobs:
  rustfmt:
    name: rustfmt
    strategy:
      matrix:
        rust: ["stable"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt
          override: true
      - name: Check formating
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  docker-api-server:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      #- name: Login to Docker Hub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: docker build
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: edgeandnode/graphix-api-server:latest
          file: ops/api-server.dockerfile
  docker-cross-checker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      #- name: Login to Docker Hub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: docker build
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: edgeandnode/graphix-cross-checker:latest
          file: ops/cross-checker.dockerfile

  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        rust: ["stable"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: test-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Build frontend
        run: >
          rustup target add wasm32-unknown-unknown &&
          cargo install trunk &&
          cargo install wasm-bindgen-cli &&
          cd frontend &&
          trunk build --release

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        rust: ["stable"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: test-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose -- --nocapture
